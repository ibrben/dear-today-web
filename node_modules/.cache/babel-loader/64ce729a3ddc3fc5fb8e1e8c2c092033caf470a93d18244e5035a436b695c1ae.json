{"ast":null,"code":"var _jsxFileName = \"/Users/ibr/Desktop/projects/prjDearToday/deartoday_web/src/pages/AboutUs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport NavBar from '../components/NavBar';\nimport { Container, Col, Row, Navbar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AboutUs = props => {\n  _s();\n  useEffect(() => {\n    // Fetch team data from an API\n    // Replace with your actual API endpoint\n    const fetchTeamData = async () => {\n      try {\n        // In a real app, this would be your API endpoint\n        // const response = await fetch('https://your-api.com/team');\n        // const data = await response.json();\n\n        // For demonstration, using mock data\n        const mockData = [{\n          id: 1,\n          name: 'Steven',\n          description: \"I'm Steve, person who organize a painting workshop to express your mood and personality\",\n          avatarPlaceholder: true\n        }, {\n          id: 2,\n          name: 'Tommy',\n          description: \"My name is Tommy, I proud to present you that I can read your mind by letting you choose your coffee and shape of cup.\",\n          avatarPlaceholder: true\n        }];\n\n        // Simulate API delay\n        setTimeout(() => {\n          setTeamMembers(mockData);\n          setLoading(false);\n        }, 800);\n      } catch (err) {\n        setError('Failed to load team data');\n        setLoading(false);\n      }\n    };\n    fetchTeamData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"custom-font\",\n        children: \"\\u0E1E\\u0E27\\u0E01\\u0E40\\u0E23\\u0E32\\u0E04\\u0E37\\u0E2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AboutUs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AboutUs;\nexport default AboutUs;\nvar _c;\n$RefreshReg$(_c, \"AboutUs\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","NavBar","Container","Col","Row","Navbar","jsxDEV","_jsxDEV","AboutUs","props","_s","fetchTeamData","mockData","id","name","description","avatarPlaceholder","setTimeout","setTeamMembers","setLoading","err","setError","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/ibr/Desktop/projects/prjDearToday/deartoday_web/src/pages/AboutUs.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport NavBar from '../components/NavBar';\nimport { Container, Col, Row, Navbar} from 'react-bootstrap';\nconst AboutUs = props => {\n    useEffect(() => {\n        // Fetch team data from an API\n        // Replace with your actual API endpoint\n        const fetchTeamData = async () => {\n          try {\n            // In a real app, this would be your API endpoint\n            // const response = await fetch('https://your-api.com/team');\n            // const data = await response.json();\n            \n            // For demonstration, using mock data\n            const mockData = [\n              {\n                id: 1,\n                name: 'Steven',\n                description: \"I'm Steve, person who organize a painting workshop to express your mood and personality\",\n                avatarPlaceholder: true\n              },\n              {\n                id: 2,\n                name: 'Tommy',\n                description: \"My name is Tommy, I proud to present you that I can read your mind by letting you choose your coffee and shape of cup.\",\n                avatarPlaceholder: true\n              }\n            ];\n            \n            // Simulate API delay\n            setTimeout(() => {\n              setTeamMembers(mockData);\n              setLoading(false);\n            }, 800);\n          } catch (err) {\n            setError('Failed to load team data');\n            setLoading(false);\n          }\n        };\n    \n        fetchTeamData();\n      }, []);\n    return (\n        <div>\n            <NavBar/>\n            <Container>\n                    <br/>\n                <h4 className=\"custom-font\">พวกเราคือ</h4>\n            </Container>\n        </div>\n    );\n};\n\n\nexport default AboutUs;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7D,MAAMC,OAAO,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACrBX,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA;QACA;;QAEA;QACA,MAAMC,QAAQ,GAAG,CACf;UACEC,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE,QAAQ;UACdC,WAAW,EAAE,yFAAyF;UACtGC,iBAAiB,EAAE;QACrB,CAAC,EACD;UACEH,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE,OAAO;UACbC,WAAW,EAAE,wHAAwH;UACrIC,iBAAiB,EAAE;QACrB,CAAC,CACF;;QAED;QACAC,UAAU,CAAC,MAAM;UACfC,cAAc,CAACN,QAAQ,CAAC;UACxBO,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,QAAQ,CAAC,0BAA0B,CAAC;QACpCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACR,oBACIJ,OAAA;IAAAe,QAAA,gBACIf,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTnB,OAAA,CAACL,SAAS;MAAAoB,QAAA,gBACFf,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACTnB,OAAA;QAAIoB,SAAS,EAAC,aAAa;QAAAL,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAChB,EAAA,CAhDIF,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAmDb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}